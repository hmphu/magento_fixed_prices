<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
$_product = $this->getProduct();
$pid = $_product->getId();
$prices = $this->getJsonFixedConfig();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
?>
<?php if ($_product->isSaleable() && count($_attributes)): ?>
    <dl>
        <?php foreach ($_attributes as $_attribute): ?>
            <dt><label class="required"><em>*</em><?php echo $_attribute->getProductAttribute()->getStoreLabel() ?>
                </label></dt>
            <dd<?php if ($_attribute->decoratedIsLast) { ?> class="last"<?php } ?>>
                <div class="input-box">
                    <select rel="<?php echo $_attribute->getAttributeId() ?>"
                            name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]"
                            id="attribute<?php echo $_attribute->getAttributeId() ?>"
                            class="required-entry super-attribute-select SSAdvConfigurable">
                        <option><?php echo $this->__('Choose an Option...') ?></option>
                    </select>
                </div>
            </dd>
        <?php endforeach; ?>
    </dl>
    <script type="text/javascript">
        <?php /* Price format */
        $labels = array();
        /* Tier prices */
        $pph = '<span class="price">PRICE</span>';
        if ($this->helper('tax')->displayBothPrices()):
            $labels['tiers'] = $this->__('Buy %1$s for %2$s (%3$s incl. tax) each', 'QTY', $pph, $pph) . ' ' . $this->__('and') . '&nbsp;<strong class="benefit">' . $this->__('save') . '&nbsp;<span class="tier-INDEX">PERCENT</span>%</strong>';

        else:
            $labels['tiers'] = $this->__('Buy %1$s for %2$s each', 'QTY', $pph) . ' ' . $this->__('and') . '&nbsp;<strong class="benefit">' . $this->__('save') . '&nbsp;<span class="tier-INDEX">PERCENT</span>%</strong>';
        endif;
        $labels['special'] = '<p class="old-price">
      <span class="price-label">' . $this->__('Regular Price:') . '</span>
    <span class="price" id="old-price-' . $pid . '_CLONE_"></span>
  </p>
  <p class="special-price">
    <span class="price-label">' . $this->__('Special Price:') . '</span>
	_YIELD_
  </p>
';
        ?>
        <?php /* Price format */ ?>
        var SSAdvConfigurableLabel = <?php echo json_encode($labels); ?>;
        var SSAdvConfigurablePrices = <?php echo $prices ? json_encode($prices) : '{}'; ?>;
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);
    </script>
<?php endif; ?>
